{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\yassin weblayer\\\\Desktop\\\\app\\\\my-app\\\\src\\\\componenet\\\\textMemo.js\",\n  _s = $RefreshSig$();\n//import React, { useRef, useState, useMemo } from \"react\";\n\nimport React, { useReducer } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nlet value = {\n  age: 0\n};\nlet reduser = (State, action) => {\n  if (action.type === \"incremented\") {\n    age: State.age + 1;\n  }\n};\nlet counter = () => {\n  _s();\n  let [State, dispatch] = useReducer(reduser, value);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      children: \" you are \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n\n/* let useMemoTest = () => {\r\n\r\n    let hex = 16777215\r\n\r\n\r\n    const [counter, setcounter] = useState(0)\r\n    const [test, settest] = useState(0)\r\n\r\n\r\n\r\n    let incre = () => {setcounter(counter + 1)}\r\n\r\n    let decre = () => {setcounter(counter - 1)}\r\n    \r\n\r\n\r\n    return (\r\n        <div>\r\n            value : {counter}\r\n            <button  onClick={incre}>-</button>\r\n            <button  onClick={decre}>+</button>\r\n            <button onClick={() => settest(test + 1)}>test</button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default useMemoTest */\n_s(counter, \"v4h/tlKM8V8I70isnbqWr1/ppsI=\");","map":{"version":3,"names":["React","useReducer","jsxDEV","_jsxDEV","Fragment","_Fragment","value","age","reduser","State","action","type","counter","_s","dispatch","children","fileName","_jsxFileName","lineNumber","columnNumber"],"sources":["C:/Users/yassin weblayer/Desktop/app/my-app/src/componenet/textMemo.js"],"sourcesContent":["//import React, { useRef, useState, useMemo } from \"react\";\r\n\r\n\r\nimport React, { useReducer } from \"react\";\r\n\r\n\r\nlet value = {\r\n    age:0\r\n}\r\n\r\nlet reduser = (State, action) => {\r\n    if(action.type === \"incremented\") {\r\n        age: State.age + 1\r\n    }\r\n}\r\n\r\n\r\nlet counter = () => {\r\n    let [State, dispatch] = useReducer(reduser, value)\r\n    return (\r\n        <>\r\n            <button></button>\r\n            <button></button>\r\n            <span> you are </span>\r\n        </>\r\n    )\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n/* let useMemoTest = () => {\r\n\r\n    let hex = 16777215\r\n\r\n\r\n    const [counter, setcounter] = useState(0)\r\n    const [test, settest] = useState(0)\r\n\r\n\r\n\r\n    let incre = () => {setcounter(counter + 1)}\r\n\r\n    let decre = () => {setcounter(counter - 1)}\r\n    \r\n\r\n\r\n    return (\r\n        <div>\r\n            value : {counter}\r\n            <button  onClick={incre}>-</button>\r\n            <button  onClick={decre}>+</button>\r\n            <button onClick={() => settest(test + 1)}>test</button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default useMemoTest */"],"mappings":";;AAAA;;AAGA,OAAOA,KAAK,IAAIC,UAAU,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAG1C,IAAIC,KAAK,GAAG;EACRC,GAAG,EAAC;AACR,CAAC;AAED,IAAIC,OAAO,GAAGA,CAACC,KAAK,EAAEC,MAAM,KAAK;EAC7B,IAAGA,MAAM,CAACC,IAAI,KAAK,aAAa,EAAE;IAC9BJ,GAAG,EAAEE,KAAK,CAACF,GAAG,GAAG,CAAC;EACtB;AACJ,CAAC;AAGD,IAAIK,OAAO,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAChB,IAAI,CAACJ,KAAK,EAAEK,QAAQ,CAAC,GAAGb,UAAU,CAACO,OAAO,EAAEF,KAAK,CAAC;EAClD,oBACIH,OAAA,CAAAE,SAAA;IAAAU,QAAA,gBACIZ,OAAA;MAAAa,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAgB,CAAC,eACjBhB,OAAA;MAAAa,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAgB,CAAC,eACjBhB,OAAA;MAAAY,QAAA,EAAM;IAAS;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC;EAAA,eACxB,CAAC;AAEX,CAAC;;AAeD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AA1BAN,EAAA,CAxBID,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}