{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\yassin weblayer\\\\Desktop\\\\app\\\\my-app\\\\src\\\\Component\\\\test..js\";\nimport React, { Fragment } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Fragmenttest = () => {\n  let name = \"google\";\n  let namearr = [\"yassin\", \"google\", \"facebook\"];\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"hello:\", namearr.map(function (item) {\n        return /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: /*#__PURE__*/_jsxDEV(\"li\", {\n            children: item === \"google\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 14,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 13,\n          columnNumber: 17\n        }, this);\n      })]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 7,\n    columnNumber: 2\n  }, this);\n};\n_c = Fragmenttest;\nexport default Fragmenttest;\nvar _c;\n$RefreshReg$(_c, \"Fragmenttest\");","map":{"version":3,"names":["React","Fragment","jsxDEV","_jsxDEV","Fragmenttest","name","namearr","children","map","item","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/yassin weblayer/Desktop/app/my-app/src/Component/test..js"],"sourcesContent":["import React,  { Fragment } from \"react\"\r\n\r\nconst Fragmenttest = () => {\r\n    let name = \"google\"\r\n    let namearr = [\"yassin\", \"google\", \"facebook\"]\r\n    return (\r\n <Fragment>\r\n        <div>\r\n         hello: \r\n        {\r\n         namearr.map(function (item) {\r\n             return (\r\n                <ul>\r\n                    <li>{item === \"google\" }</li>\r\n                </ul>\r\n             )  \r\n        })\r\n        }\r\n        </div> \r\n </Fragment>\r\n\r\n    \r\n\r\n    ) \r\n    \r\n}\r\n\r\nexport default Fragmenttest"],"mappings":";AAAA,OAAOA,KAAK,IAAKC,QAAQ,QAAQ,OAAO;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAExC,MAAMC,YAAY,GAAGA,CAAA,KAAM;EACvB,IAAIC,IAAI,GAAG,QAAQ;EACnB,IAAIC,OAAO,GAAG,CAAC,QAAQ,EAAE,QAAQ,EAAE,UAAU,CAAC;EAC9C,oBACHH,OAAA,CAACF,QAAQ;IAAAM,QAAA,eACFJ,OAAA;MAAAI,QAAA,GAAK,QAEL,EACCD,OAAO,CAACE,GAAG,CAAC,UAAUC,IAAI,EAAE;QACxB,oBACGN,OAAA;UAAAI,QAAA,eACIJ,OAAA;YAAAI,QAAA,EAAKE,IAAI,KAAK;UAAQ;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAM;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC7B,CAAC;MAEb,CAAC,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAEG;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAMZ,CAAC;AAAAC,EAAA,GAvBKV,YAAY;AAyBlB,eAAeA,YAAY;AAAA,IAAAU,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}