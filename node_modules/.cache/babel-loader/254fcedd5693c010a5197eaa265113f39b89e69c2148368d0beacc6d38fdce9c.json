{"ast":null,"code":"import { increment, decrement, reset } from \"./type\";\nlet count = {\n  counter: 0\n};\nexport const CreateReducer = (state = count, action) => {\n  if (action.type === increment) {\n    return {\n      counter: state.counter + 1\n    };\n  }\n  if (action.type === decrement) {\n    if (state.counter) {\n      return {\n        counter: state.counter - 1\n      };\n    }\n  }\n  if (action.type === reset) {\n    return {\n      counter: 0\n    };\n  }\n  return state;\n};\n_c = CreateReducer;\nvar _c;\n$RefreshReg$(_c, \"CreateReducer\");","map":{"version":3,"names":["increment","decrement","reset","count","counter","CreateReducer","state","action","type","_c","$RefreshReg$"],"sources":["C:/Users/yassin weblayer/Desktop/practic_website_MOVIE/src/componenets/reducer.js"],"sourcesContent":["import { increment, decrement, reset } from \"./type\"\r\n\r\nlet count = {\r\n    counter: 0\r\n}\r\nexport const CreateReducer = (state = count, action) => {\r\n    if(action.type === increment) {\r\n        return {counter: state.counter + 1}\r\n    }\r\n    if(action.type === decrement) {\r\n        if(state.counter ) {\r\n          return {counter: state.counter - 1} \r\n        }\r\n    }\r\n    if(action.type === reset) {\r\n        return {counter: 0}\r\n    }\r\n    return state\r\n}\r\n"],"mappings":"AAAA,SAASA,SAAS,EAAEC,SAAS,EAAEC,KAAK,QAAQ,QAAQ;AAEpD,IAAIC,KAAK,GAAG;EACRC,OAAO,EAAE;AACb,CAAC;AACD,OAAO,MAAMC,aAAa,GAAGA,CAACC,KAAK,GAAGH,KAAK,EAAEI,MAAM,KAAK;EACpD,IAAGA,MAAM,CAACC,IAAI,KAAKR,SAAS,EAAE;IAC1B,OAAO;MAACI,OAAO,EAAEE,KAAK,CAACF,OAAO,GAAG;IAAC,CAAC;EACvC;EACA,IAAGG,MAAM,CAACC,IAAI,KAAKP,SAAS,EAAE;IAC1B,IAAGK,KAAK,CAACF,OAAO,EAAG;MACjB,OAAO;QAACA,OAAO,EAAEE,KAAK,CAACF,OAAO,GAAG;MAAC,CAAC;IACrC;EACJ;EACA,IAAGG,MAAM,CAACC,IAAI,KAAKN,KAAK,EAAE;IACtB,OAAO;MAACE,OAAO,EAAE;IAAC,CAAC;EACvB;EACA,OAAOE,KAAK;AAChB,CAAC;AAAAG,EAAA,GAbYJ,aAAa;AAAA,IAAAI,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}