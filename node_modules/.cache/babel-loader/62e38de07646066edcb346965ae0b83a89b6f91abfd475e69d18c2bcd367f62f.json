{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\yassin weblayer\\\\Desktop\\\\app\\\\my-app\\\\src\\\\componenet\\\\todoApp.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport Button from 'react-bootstrap/Button';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nlet AppTodo = () => {\n  _s();\n  let [todos, setTodos] = useState(\"yassin\");\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"todolist\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"input\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 10,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          className: \"btn\",\n          variant: \"outline-danger\",\n          children: \"Add\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 11,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"list\",\n          children: /*#__PURE__*/_jsxDEV(\"ul\", {\n            children: todos.map(() => {\n              /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"boxlist\",\n                children: [/*#__PURE__*/_jsxDEV(\"li\", {\n                  children: \"sddsa\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 17,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  children: \"delete\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 18,\n                  columnNumber: 25\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 16,\n                columnNumber: 17\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 13,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 12,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 9,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n};\n_s(AppTodo, \"VQBR3atlCV1v6yE+lr6tnyH37lo=\");\n_c = AppTodo;\nexport default AppTodo;\nvar _c;\n$RefreshReg$(_c, \"AppTodo\");","map":{"version":3,"names":["React","useState","Button","jsxDEV","_jsxDEV","Fragment","_Fragment","AppTodo","_s","todos","setTodos","children","className","fileName","_jsxFileName","lineNumber","columnNumber","variant","map","_c","$RefreshReg$"],"sources":["C:/Users/yassin weblayer/Desktop/app/my-app/src/componenet/todoApp.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport Button from 'react-bootstrap/Button';\r\n\r\nlet AppTodo = () => {\r\n    let [todos, setTodos] = useState(\"yassin\")\r\n    return (\r\n        <>\r\n            <div className=\"container\">\r\n                <div className=\"todolist\">\r\n                <input className=\"input\"/>\r\n                <Button className=\"btn\" variant=\"outline-danger\">Add</Button>\r\n                <div className=\"list\">\r\n                    <ul>\r\n                        {\r\n                            todos.map(() => {\r\n                <div className=\"boxlist\">\r\n                        <li>sddsa</li>\r\n                        <span>delete</span>\r\n                </div>\r\n                            })\r\n                        }\r\n                    </ul>\r\n                </div>\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default AppTodo"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,MAAM,MAAM,wBAAwB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAE5C,IAAIC,OAAO,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAChB,IAAI,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGT,QAAQ,CAAC,QAAQ,CAAC;EAC1C,oBACIG,OAAA,CAAAE,SAAA;IAAAK,QAAA,eACIP,OAAA;MAAKQ,SAAS,EAAC,WAAW;MAAAD,QAAA,eACtBP,OAAA;QAAKQ,SAAS,EAAC,UAAU;QAAAD,QAAA,gBACzBP,OAAA;UAAOQ,SAAS,EAAC;QAAO;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAC,CAAC,eAC1BZ,OAAA,CAACF,MAAM;UAACU,SAAS,EAAC,KAAK;UAACK,OAAO,EAAC,gBAAgB;UAAAN,QAAA,EAAC;QAAG;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,eAC7DZ,OAAA;UAAKQ,SAAS,EAAC,MAAM;UAAAD,QAAA,eACjBP,OAAA;YAAAO,QAAA,EAEQF,KAAK,CAACS,GAAG,CAAC,MAAM;cAC5B,aAAAd,OAAA;gBAAKQ,SAAS,EAAC,SAAS;gBAAAD,QAAA,gBAChBP,OAAA;kBAAAO,QAAA,EAAI;gBAAK;kBAAAE,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAI,CAAC,eACdZ,OAAA;kBAAAO,QAAA,EAAM;gBAAM;kBAAAE,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAM,CAAC;cAAA;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACtB,CAAC;YACM,CAAC;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAEN;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACJ,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACD;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACL;EAAC,gBACR,CAAC;AAEX,CAAC;AAAAR,EAAA,CAxBGD,OAAO;AAAAY,EAAA,GAAPZ,OAAO;AA0BX,eAAeA,OAAO;AAAA,IAAAY,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}