{"ast":null,"code":"//import React, { useRef, useState, useMemo } from \"react\";\n\nimport React from \"react\";\nlet reduser = (State, action) => {\n  if (action.type === \"incremeent\") {}\n};\n\n/* let useMemoTest = () => {\r\n\r\n    let hex = 16777215\r\n\r\n\r\n    const [counter, setcounter] = useState(0)\r\n    const [test, settest] = useState(0)\r\n\r\n\r\n\r\n    let incre = () => {setcounter(counter + 1)}\r\n\r\n    let decre = () => {setcounter(counter - 1)}\r\n    \r\n\r\n\r\n    return (\r\n        <div>\r\n            value : {counter}\r\n            <button  onClick={incre}>-</button>\r\n            <button  onClick={decre}>+</button>\r\n            <button onClick={() => settest(test + 1)}>test</button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default useMemoTest */","map":{"version":3,"names":["React","reduser","State","action","type"],"sources":["C:/Users/yassin weblayer/Desktop/app/my-app/src/componenet/textMemo.js"],"sourcesContent":["//import React, { useRef, useState, useMemo } from \"react\";\r\n\r\n\r\nimport React from \"react\";\r\n\r\n\r\nlet reduser = (State, action) => {\r\n    if(action.type === \"incremeent\") {\r\n\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n/* let useMemoTest = () => {\r\n\r\n    let hex = 16777215\r\n\r\n\r\n    const [counter, setcounter] = useState(0)\r\n    const [test, settest] = useState(0)\r\n\r\n\r\n\r\n    let incre = () => {setcounter(counter + 1)}\r\n\r\n    let decre = () => {setcounter(counter - 1)}\r\n    \r\n\r\n\r\n    return (\r\n        <div>\r\n            value : {counter}\r\n            <button  onClick={incre}>-</button>\r\n            <button  onClick={decre}>+</button>\r\n            <button onClick={() => settest(test + 1)}>test</button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default useMemoTest */"],"mappings":"AAAA;;AAGA,OAAOA,KAAK,MAAM,OAAO;AAGzB,IAAIC,OAAO,GAAGA,CAACC,KAAK,EAAEC,MAAM,KAAK;EAC7B,IAAGA,MAAM,CAACC,IAAI,KAAK,YAAY,EAAE,CAEjC;AACJ,CAAC;;AAcD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}